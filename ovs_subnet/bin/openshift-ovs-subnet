#!/bin/bash
set -ex

action=$1
pod_namespace=$2
pod_name=$3
net_container=$4

source /etc/openshift-sdn/config.env
cluster_subnet=${OPENSHIFT_CLUSTER_SUBNET}
tap_ip=${OPENSHIFT_SDN_TAP1_ADDR}

Init() {
    true
}

Setup() {
    pid=$(docker inspect --format "{{.State.Pid}}" ${net_container})
    ipaddr=$(docker inspect --format "{{.NetworkSettings.IPAddress}}" ${net_container})
    new_ip=$ipaddr
    ipaddr_sub=$(docker inspect --format "{{.NetworkSettings.IPPrefixLen}}" ${net_container})
    docker_gateway=$(docker inspect --format "{{.NetworkSettings.Gateway}}" ${net_container})
    veth_host=$(jq .network_state.veth_host /var/lib/docker/execdriver/native/${net_container}/state.json | tr -d '"')

    brctl delif lbr0 $veth_host
    ovs-vsctl add-port br0 ${veth_host} 
    ovs_port=$(ovs-ofctl -O OpenFlow13 dump-ports-desc br0  | grep ${veth_host} | cut -d "(" -f 1 | tr -d ' ')
    ovs-ofctl -O OpenFlow13 add-flow br0 "table=0,cookie=0x${ovs_port},priority=100,ip,nw_dst=${new_ip},actions=output:${ovs_port}"
    ovs-ofctl -O OpenFlow13 add-flow br0 "table=0,cookie=0x${ovs_port},priority=100,arp,nw_dst=${new_ip},actions=output:${ovs_port}"

    del_default_cmd="ip route del default via ${docker_gateway} dev eth0"
    nsenter -n -t $pid -- $del_default_cmd

    add_gateway_route="ip route add $tap_ip/32 dev eth0 proto kernel scope link src $ipaddr"
    nsenter -n -t $pid -- $add_gateway_route

    add_subnet_route="ip route add ${cluster_subnet} dev eth0 proto kernel scope link src $ipaddr"
    nsenter -n -t $pid -- $add_subnet_route

    add_default_cmd="ip route add default via $tap_ip"
    nsenter -n -t $pid -- $add_default_cmd
}

Teardown() {
    veth_host=$(jq .network_state.veth_host /var/lib/docker/execdriver/native/${net_container}/state.json | tr -d '"')
    ovs_port=$(ovs-ofctl -O OpenFlow13 dump-ports-desc br0  | grep ${veth_host} | cut -d "(" -f 1 | tr -d ' ')
    ovs-vsctl del-port $veth_host
    ovs-ofctl -O OpenFlow13 del-flows br0 "table=0,cookie=0x${ovs_port}/0xffffffff"
}

case "$action" in
    init)
	Init
	;;
    setup)
	Setup
	;;
    teardown)
	Teardown
	;;
    *)
        echo "Bad input: $@"
        exit 1
esac

